# Copyright 2018 Jamiel Almeida
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set-option -g update-environment "DISPLAY SSH_AGENT_PID SSH_ASKPASS SSH_AUTH_SOCK SSH_CONNECTION TMUX_COLOR WINDOW"
run-shell \
    "tmux set-option -g default-shell \"$(getent passwd $USER | cut -d: -f7)\""

# SERVER OPTIONS {{{

run-shell -b "mkdir --parents --mode='u=rwx,go=' ${HOME}/.local/history"

set-option -g default-terminal screen-256color
set-option -g escape-time 0
set-option -g focus-events on
set-option -g history-file "${HOME}/.local/history/tmux_history"
set-option -g message-limit 50000

%if #{==:#{@terminal_overrides_set},}

# This block is essentially run only once
set-option -g -q @terminal_overrides_set "done"
set-option -ga terminal-overrides ",rxvt*:smcup@:rmcup@:Tc"
set-option -ga terminal-overrides ",xterm*:smcup@:rmcup@:Tc"

%endif

# }}}
# UNBINDS AND REBINDS BACK TO DEFAULTS {{{

unbind-key -T prefix -a
unbind-key -T copy-mode-vi D
unbind-key -T copy-mode-vi A

bind-key : command-prompt
bind-key = choose-buffer
bind-key ? list-keys
bind-key d detach-client
bind-key q display-panes
bind-key '~' show-messages
bind-key PPage copy-mode -u

# }}}
# PREFIX AND RELOADING {{{

set-option -g prefix C-Space
set-option -g prefix2 None
bind-key C-Space send-prefix
bind-key Space last-window

bind-key C-r source-file "${HOME}/.tmux.conf" \;\
             display-message "Reloaded ${HOME}/.tmux.conf"

# }}}
# GENERAL BEHAVIOR {{{

set-option -g mouse on
set-option -g status-keys emacs
set-option -g visual-bell on
set-option -g visual-activity off
set-option -g visual-silence off
set-option -g set-clipboard on
set-option -g activity-action none
set-option -g silence-action none
set-window-option -g mode-keys vi
set-window-option -g monitor-activity on
set-window-option -g monitor-silence 0
set-window-option -g remain-on-exit off
set-window-option -g xterm-keys on

## RESPONSIVENESS TWEAK
set-option -g repeat-time 500
set-option -g display-time 1000
set-option -g display-panes-time 2000

set-option -g history-limit 50000
set-option -g status-interval 60

## SET WINDOW MANAGER WINDOW TITLES
set-option -g set-titles on
set-option -g set-titles-string '[tmux] #I:#P/#W | #T'

# }}}
# NUMBERING BEHAVIOR {{{

set-option -g base-index 1
set-option -g renumber-windows on
set-window-option -g pane-base-index 1

# }}}
# LAYOUT AND PANE SIZES {{{

set-window-option -g aggressive-resize on
set-window-option -g main-pane-height 42
set-window-option -g main-pane-width 91

# }}}
# BINDINGS {{{

## LAYOUT {{{

bind-key C-s set-option status
bind-key C-g set-window-option pane-border-status

bind-key b break-pane -d
bind-key B choose-tree "join-pane -v -d -s '%%'"

bind-key A select-layout main-vertical
bind-key O select-layout main-horizontal
bind-key W select-layout even-vertical
bind-key V select-layout even-horizontal
bind-key T select-layout tiled

# }}}
## SESSION/WINDOW MANIPULATION AND NAVIGATION {{{

bind-key '"' choose-tree

bind-key C-^ choose-client
bind-key ! switch-client -p
bind-key ^ switch-client -p
bind-key '#' switch-client -n

bind-key D choose-tree -s "kill-session -t '%%'"

bind-key c new-window -c '#{pane_current_path}'
bind-key C new-window -c "${HOME}"

bind-key h split-window -h -b -c "#{pane_current_path}"
bind-key l split-window -h -c "#{pane_current_path}"
bind-key j split-window -v -c "#{pane_current_path}"
bind-key k split-window -v -b -c "#{pane_current_path}"

bind-key H split-window -h -b -c "${HOME}"
bind-key L split-window -h -c "${HOME}"
bind-key J split-window -v -c "${HOME}"
bind-key K split-window -v -b -c "${HOME}"

bind-key Left split-window -f -h -b -c "#{pane_current_path}"
bind-key Right split-window -f -h -c "#{pane_current_path}"
bind-key Down split-window -f -v -c "#{pane_current_path}"
bind-key Up split-window -f -v -b -c "#{pane_current_path}"

bind-key S-Left split-window -f -h -b -c "${HOME}"
bind-key S-Right split-window -f -h -c "${HOME}"
bind-key S-Down split-window -f -v -c "${HOME}"
bind-key S-Up split-window -f -v -b -c "${HOME}"

bind-key _ split-window -f -l3 -b -v -c "#{pane_current_path}" -t "{top}"
bind-key - split-window -f -l3 -v -c "#{pane_current_path}" -t "{bottom}"

bind-key C-n next-window
bind-key C-p previous-window
bind-key C-Left swap-window -t ":-1"
bind-key C-Right swap-window -t ":+1"

bind-key I choose-tree "link-window -a -s '%%'"
bind-key U unlink-window

## }}}
## PANE NAVIGATION AND RESIZING {{{

bind-key C-a last-pane
bind-key C-m select-pane -m
bind-key C-d confirm-before -p "kill-pane #S:#I.#P? (y/n)" kill-pane
bind-key BSpace select-pane -L # same as CTRL-H in some alien planets

bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R

bind-key -r \; resize-pane -U 1
bind-key -r "'" resize-pane -D 1
bind-key -r , resize-pane -L 5
bind-key -r . resize-pane -R 5
bind-key C-u swap-pane -U
bind-key C-i swap-pane -D

bind-key C-z resize-pane -Z

## }}}
## COPY/PASTING AND SCROLLING BINDINGS {{{

bind-key C-b copy-mode -eu
bind-key Escape copy-mode

bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi C-v send -X rectangle-toggle
bind-key -T copy-mode-vi v send -X begin-selection

# X/Windows CLIPBOARD {{{

bind-key -T copy-mode-vi C-j send -X copy-pipe-and-cancel \
    "xclip -in -selection clipboard"
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel \
    "xclip -in -selection clipboard"
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel \
    "xclip -in -selection clipboard"
bind-key -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel \
    "xclip -in -selection clipboard"
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel \
    "xclip -in -selection clipboard"
bind-key C-c run-shell "tmux show-buffer | xclip -in -selection clipboard"
bind-key C-v \
    run-shell "xclip -out -selection clipboard | tmux load-buffer -" \;\
    paste-buffer
bind-key C-w paste-buffer

# }}}

## }}}
## MISC BINDINGS {{{

bind-key e split-window -f -h -b -c "#{pane_current_path}" -t ":.1" \
    $EDITOR +Files
bind-key E split-window -f -h -b -c "#{HOME}" -t ":.1" $EDITOR
bind-key C-e new-window -t'^' -a -c "#{HOME}" $EDITOR +History \;\
    swap-window -t ":-1"

bind-key M set-option mouse \;\
           display-message 'Mouse: #{?mouse,ON,OFF}'

bind-key C-t refresh-client \;\
             display-message 'Client refreshed'
bind-key C-o clock-mode
bind-key C-x run-shell -b 'tmux-leaderswitch'
bind-key r command-prompt -p "new window name?:" "rename-window %%"
bind-key R set-window-option automatic-rename \;\
           display-message "Automatic rename: #{?automatic-rename,ON,OFF}"
bind-key X set-window-option remain-on-exit \;\
           display-message "Remain on exit: #{?remain-on-exit,ON,OFF}"
bind-key Z \
    if-shell -F "#{pane_input_off}" \
        "select-pane -e; display-message 'Pane set to Read-Write'" \
        "select-pane -d; display-message 'Pane set to Read-Only'"
bind-key C-q set-window-option synchronize-panes \;\
             display-message "Synchronized panes: #{?synchronize-panes,ON,OFF}"

## }}}

# }}}
# THEMING {{{

set-option -g status on
set-option -g status-position "top"
set-option -g status-justify "left"
set-option -g status-left-length 100
set-option -g status-right-length 100
set-window-option -g pane-border-format \
    " [#I:#P] #{pane_current_command} @ #{pane_current_path} "
set-window-option -g pane-border-status off
set-window-option -g window-status-separator ""

## COLORING {{{

set-window-option -g mode-style "bold,fg=colour007,bg=default"

### NORMAL/ACTIVE
set-window-option -g window-style "fg=colour244,bg=default"
set-window-option -g window-active-style "fg=colour007,bg=default"

### CLOCK STUFF
set-window-option -g clock-mode-colour "colour015"
set-window-option -g clock-mode-style 24

### PANE DISPLAY
set-option -g display-panes-colour "colour007"
set-option -g display-panes-active-colour "colour001"

### MAIN BAR
set-option -g status-left-style "fg=colour000,bg=colour015"
set-option -g status-style "fg=colour015,bg=colour000"

### MESSAGE TOASTS/VISUAL-BELLS
set-option -g message-style "fg=colour007,bg=colour008"

### COMMAND ENTRY (:-mode)
### Note: this doesn't seem to have any effect in tmux 2.5 and message-style is
###       the same as the command style
set-option -g message-command-style "fg=colour007,bg=colour008"

### PANE BORDERS
set-window-option -g pane-active-border-style "fg=colour015,bg=default"
set-window-option -g pane-border-style "fg=colour008,bg=default"

### CURRENT WINDOW
set-window-option -g window-status-current-style \
    "fg=colour015,reverse,bg=default"

### WINDOWS WITH A BELL ALERT
set-window-option -g window-status-bell-style \
    "fg=colour015,underscore,bg=colour001"

### WINDOWS WITH RECENT ACTIVITY
set-window-option -g window-status-activity-style \
    "fg=colour015,underscore,bg=default"

### ALL OTHER WINDOWS
set-window-option -g window-status-style "fg=colour007,bg=colour000"

## }}}

## LEFT/RIGHT OF MAIN BAR
set-option -g status-left \
    " #h #[fg=colour007,bg=colour240] #S #[fg=default,bg=colour237] "
set-option -g status-right " #I:#P | %a %Y-%m-%d %H:%M "

## WINDOW/TAB NAMES
set-window-option -g window-status-format " #I:#W "
set-window-option -g window-status-current-format " #I:#W "

# }}}
# SETUP SPECIFIC SCRIPTS/CONFIGS {{{

if-shell -b "which clipper-in" \
            "run-shell -b tmux-clipper-binds"
if-shell -b "which tmux-machinespecific-config" \
            "run-shell -b tmux-machinespecific-config"

# }}}

# vim: ft=tmux foldmethod=marker foldenable
